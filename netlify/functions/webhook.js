const axios = require("axios");

exports.handler = async (event) => {
    if (event.httpMethod !== "POST") {
        return {
            statusCode: 405,
            body: "Method Not Allowed",
        };
    }

    try {
        const body = JSON.parse(event.body);
        const commits = body.commits;
        const branch = body.ref?.split("/").pop() || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–µ—Ç–∫–∞";
        const author = body.pusher?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä";

        if (!commits || !Array.isArray(commits)) {
            console.error("–û—à–∏–±–∫–∞: commits –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º");
            return { statusCode: 400, body: "Invalid payload" };
        }

        if (!process.env.TELEGRAM_BOT_TOKEN || !process.env.CHAT_ID) {
            console.error("–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã");
            return { statusCode: 500, body: "Missing Telegram credentials" };
        }

        let message = `üõ† *–ù–æ–≤—ã–π –ø—É—à –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏!*  
üîπ *–ê–≤—Ç–æ—Ä:* ${author}  
üîπ *–í–µ—Ç–∫–∞:* ${branch}  
üîπ *–ö–æ–º–º–∏—Ç—ã:*  
`;

        commits.forEach((commit, index) => {
            message += `${index + 1}. *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${commit.message}  
   [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–º–∏—Ç](${commit.url})  
`;
        });

        await axios.post(`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`, {
            chat_id: process.env.CHAT_ID,
            text: message,
            parse_mode: "Markdown",
        });

        return { statusCode: 200, body: "Message sent successfully" };
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:", error);
        return { statusCode: 500, body: "Internal Server Error" };
    }
};
